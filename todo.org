* free recs in c4tbl_free()
* add c4dyna
** use slab for its
** take it_size as param
** keep internal len
** add dyna_iter with slab_iter field
** use instead of slab in c4map

* add C4DEFER_SCOPE(name) & C4DEFER_TO(scope)
** use dyna as cleanup marker
** push defers and pop on exit
** free dyna before exit
* add c4slab_iter
** like map iter
** use instead of indexing
* rename err_start()/_next() to try_X()
* add struct c4seq
** add as member in iters
** contains next fn / bool skip fn
*** call regular iter
** contains data member
*** forward to next fn
** add C4SEQ_DO/MAP/DROP
* add db dir
** move tbl, rec & cols
** investigate recursive cmake globs
* add vicsy_peer_save()
* implement c4map_merge()
** add c4map_splice()
* add init macros
** ex C4MAP(var, cmp)
** declare var & run init
** add for all types
* add map to README
* add tbl_reset()
** merge rec
* add vicsy_peer_load()
* add automagic freeing of cols & tbls like err/val types
* add pthread chan based on vec & semaphore (sbcl docs)
* add C4PANIC/RECOVER macros
** use jmpbuf
** register recovers in ctx
*** else print stacktrace from tries & exit
* add C4ERR_ENABLED define
** set to 1 if not defined in err.h
** use to bypass all error macros
* add struct c4proc
** based on pthreads
** mailbox based on semaphore & queue
* add seqs dir
** move dyna, ls, map, slab & seq
