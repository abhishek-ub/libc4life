* add C4ARG macro
** ({arg;})
** use for all macro args that aren't symbols
** add C4MIN / C4MAX

* add c4bset with it_size
** copy map imp & change signatures like header
** change map to use bset instead of dyna

* add c4pair
** store size_t left_size & char data[]
** provide fns for getting left/right
** provide macro C4PAIR_SIZE

* add c4tags
** use c4dyna to store str
** add c4dyna_splice to insert new
** c4tags_add
** c4tags_remove
** use binary search to find pos
*** copy deref
* ---
* document rolling your own allocator
* rename err_start()/_next() to try_X()
* add automagic freeing of cols & tbls like err/val types
* add vicsy_peer_save()
* implement c4map_merge()
** add c4map_splice()
* add tbl_reset()
** merge rec
* add vicsy_peer_load()
* ---
* add C4SLAB_DO
* add C4BMAP_DO
** loop entries
** use in tbl & rec
* add c4ls_seq
** encapsulate next pre-fetch from LS_DO
* add c4array_seq
** init with void *, len & it_size
* add c4seq_skip(size_t n)
** add skip(n) method
** do nothing but increase idx if NULL
** forward to recs_iter in tbl
** forward to src seq_map
** init to call c4seq_next() n times
---
* add struct c4seq *_c4seq_gather(...)
** add c4seq_gather macro to NULL terminate
* add struct c4seq *c4seq_spread(self, cnt)
* add pthread chan based on vec & semaphore (sbcl docs)
* add C4PANIC/RECOVER macros
** use jmpbuf
** register recovers in ctx
*** else print stacktrace from tries & exit
* add C4ERR_ENABLED define
** set to 1 if not defined in err.h
** use to bypass all error macros
* add c4mbox based on pthread semaphore & queue
